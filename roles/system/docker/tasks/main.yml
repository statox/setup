# Recreating instructions at https://docs.docker.com/engine/install/ubuntu/
# If the playbook fails an alternative is to use the script
# curl -fsSL https://get.docker.com -o get-docker.sh

- name: Install dependencies
  apt:
    name: "{{item}}"
    state: present
    update_cache: yes
  loop:
    - ca-certificates
    - curl
    - gnupg
    - lsb-release

- name: Check if the key exists
  stat:
    path: /usr/share/keyrings/docker-archive-keyring.gpg
  register: key_file

- name: Add Docker's official GPG key
  shell: >
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  when: key_file.stat.exists == false

- name: Check if the repo source exists
  stat:
    path: /etc/apt/sources.list.d/docker.list
  register: repo_file

- name: Add Docker's repository
  copy:
    dest: /etc/apt/sources.list.d/docker.list
    src: "{{role_path}}/files/docker.list"
  when: repo_file.stat.exists == false

- name: Get architecture
  shell: dpkg --print-architecture
  register: arch

- name: Get ubuntu distribution
  shell: ". /etc/os-release && echo $ID"
  register: dist

- name: Get distribution version
  shell: ". /etc/lsb-release && echo $DISTRIB_CODENAME"
  register: dist_version

- name: Add Docker's repository
  template:
    dest: /etc/apt/sources.list.d/docker.list
    src: "{{role_path}}/files/docker.list.j2"
  when: repo_file.stat.exists == false

- name: Install docker
  apt:
    name: "{{item}}"
    state: present
    update_cache: yes
  loop:
    - docker-ce
    - docker-compose
    - docker-ce-cli
    - containerd.io
  notify: restart docker

- name: Add user to docker group
  user:
    name: "{{ lookup('env','USER') }}"
    groups: docker
    append: yes
