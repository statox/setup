server {
    listen 80;
    listen [::]:80;

    server_name kibana.statox.fr;

    location / {
        # Redirect http to https
        return 301 https://kibana.statox.fr$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name kibana.statox.fr;

    # Self signed certificates generated in the Dockerfile
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

    location / {
        proxy_pass http://kibana:5601;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl;
    server_name logs.statox.fr;

    # Self signed certificates generated in the Dockerfile
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

    location / {
        # Should use LOGSTASH_HTTP_INPUT_PORT from docker-compose.yml instead of hardcoding 8888
        proxy_pass http://logstash:8888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
