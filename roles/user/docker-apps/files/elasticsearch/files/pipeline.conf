# List of existing input plugins:
# https://www.elastic.co/guide/en/logstash/current/input-plugins.html

input {
  # file {
  #   # Kept as an example: It is possible to ingest files directly on the host of the logstash container
  #   # https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html
  #   mode => "tail"
  #   path => "/usr/share/logstash/ingest_data/*"
  # }

  http {
    port => "${LOGSTASH_HTTP_INPUT_PORT}"
    user => "${LOGGER_USER}"
    password => "${LOGGER_PASSWORD}"

    codec => json {
        # https://www.elastic.co/guide/en/logstash/current/plugins-codecs-json.html#plugins-codecs-json-target
        target => "[document]"
    }

    # Empty additional_codecs is needed for the http plugin to take into account
    # the `target` setting of the json codec, see this issue
    # https://github.com/logstash-plugins/logstash-codec-json/issues/40
    additional_codecs => {}
  }

  # beats {
  #   port => 5044
  # }
}

filter {
    mutate {
        # Remove the field automatically added by the json codec for the http plugin
        remove_field => [ "[event][original]" ]
    }

    # The elasticsearch output plugin's doc recommend to set data_stream_dataset in the output
    # but that doesn't work with interpolation so we set the data stream here instead
    # https://discuss.elastic.co/t/manage-several-data-stream-s-in-the-elasitcsearch-output-with-interpolation/332981/2
    if [url][path] == "/api.statox.fr/_doc" {
        mutate {
            add_field => { "[data_stream][dataset]" => "api-statox" }
        }
        if [document][message] == "Home tracking event" {
            mutate {
                # Don't keep the data added by the http plugin
                remove_field => [ "[event]", "[host]" , "[http]" , "[url]" , "[user_agent]" ]
                # TODO Fix this logic
                replace => { "[data_stream][dataset]" => "home-tracker" }
            }
        }
        if [document][component] == "meteo-france" and [document][message] == "New observation" {
            mutate {
                # Don't keep the data added by the http plugin
                remove_field => [ "[event]", "[host]" , "[http]" , "[url]" , "[user_agent]" ]
                # TODO Fix this logic
                replace => { "[data_stream][dataset]" => "meteo-france" }
            }
        }
    } else if [url][path] == "/me.tracker/_doc" {
        mutate {
            # Event of my personnal tracking service should not keep the data added by the http plugin
            remove_field => [ "[event]", "[host]" , "[http]" , "[url]" , "[user_agent]" ]
            add_field => { "[data_stream][dataset]" => "me-tracker" }
        }
    } else {
        mutate {
            add_field => { "[data_stream][dataset]" => "others" }
        }
    }
}

output {
    # stdout {
    #     # Write on container output (enable only for debug)
    #     codec => rubydebug
    # }

    elasticsearch {
        hosts => "${ELASTIC_HOSTS}"
        user => "${ELASTIC_USER}"
        password => "${ELASTIC_PASSWORD}"
        cacert => "/usr/share/logstash/certs/ca/ca.crt"

        data_stream => "true"
        data_stream_type => "logs"
    }
}
