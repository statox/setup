networks:
  # Used by traefik to expose the public services
  reverse-proxy:
    external: true
  # Connect db and snapshotter
  api-db:
    name: api-db
    driver: bridge

services:
  mysql:
    image: mysql:8.4.5
    restart: unless-stopped
    container_name: api-db
    environment:
      MYSQL_ROOT_PASSWORD: ${APIDB_ROOT_PASSWORD}
      MYSQL_DATABASE: api
      MYSQL_USER: ${APIDB_USER_NAME}
      MYSQL_PASSWORD: ${APIDB_USER_PASSWORD}
    volumes:
      - ./mysql-data:/var/lib/mysql
    expose:
      - 3306
    networks:
      - reverse-proxy
      - api-db
    labels:
        - "traefik.enable=true"
        # tcp router seems to not work well with a specific hostname, so using * instead
        - "traefik.tcp.routers.api-db.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.api-db.entrypoints=mysql"
        - "traefik.tcp.services.api-db.loadbalancer.server.port=3306"
        # Since the container has 2 networks we need to specify which one should be used by traefik
        - "traefik.docker.network=reverse-proxy"

  snapshotter:
    container_name: api-db-snapshotter
    restart: unless-stopped
    build:
      dockerfile: ./builder/snapshotter/Dockerfile
    networks:
      - api-db
    environment:
      MYSQL_DATABASE: api
      MYSQL_USER: ${APIDB_USER_NAME}
      MYSQL_PASSWORD: ${APIDB_USER_PASSWORD}
      AWS_ACCESS_KEY_ID: ${APIDB_SNAPSHOT_S3_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${APIDB_SNAPSHOT_S3_SECRET_KEY}
