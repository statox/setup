# IMPORTANT: This is a WORK IN PROGRESS
#
# I tested the install on panda, it works but
# - I need to setup the secrets in the secret store
# - Panda is not big enough, khoj really requires a GPU to run at acceptable speed
# - I haven't tested the sandbox and search service
# - I don't like having all the containers on the reverse-proxy network it would be better
#   to have only khoj on reverse-proxy and the other services on a separate network

networks:
  reverse-proxy:
    external: true
  khoj_network:

volumes:
  khoj_config:
  khoj_db:
  khoj_models:
  khoj_search:

services:
  database:
    image: ankane/pgvector
    container_name: khoj-database
    expose:
      - 5432
    networks:
      - reverse-proxy
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - khoj_db:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  sandbox:
    image: ghcr.io/khoj-ai/terrarium:latest
    container_name: khoj-sandbox
    expose:
      - 8080
    networks:
      - reverse-proxy

  search:
    image: docker.io/searxng/searxng:latest
    container_name: khoj-search
    expose:
      - 8080
    networks:
      - reverse-proxy
    volumes:
      - khoj_search:/etc/searxng
    environment:
      - SEARXNG_BASE_URL=http://localhost:42113/

  server:
    depends_on:
      database:
        condition: service_healthy
    image: ghcr.io/khoj-ai/khoj:latest
    container_name: khoj-server
    deploy:
      resources:
        limits:
          cpus: "5"
          memory: 10G
    expose:
      - 42110
    working_dir: /app
    volumes:
      - khoj_config:/root/.khoj/
      - khoj_models:/root/.cache/torch/sentence_transformers
      - khoj_models:/root/.cache/huggingface
    # Use 0.0.0.0 to explicitly set the host ip for the service on the container. https://pythonspeed.com/articles/docker-connection-refused/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - KHOJ_DJANGO_SECRET_KEY=${KHOJ_DJANGO_SECRET_KEY}
      - KHOJ_DEBUG=False
      - KHOJ_ADMIN_EMAIL=${KHOJ_ADMIN_EMAIL}
      - KHOJ_ADMIN_PASSWORD=${KHOJ_ADMIN_PASSWORD}
      # Default URL of Terrarium, the Python sandbox used by Khoj to run code. Its container is specified above
      - KHOJ_TERRARIUM_URL=http://host.docker.internal:9999
      # Default URL of SearxNG, the default web search engine used by Khoj. Its container is specified above
      - KHOJ_SEARXNG_URL=http://host.docker.internal:42113
      # Uncomment line below to use with Ollama running on your local machine at localhost:11434.
      # Change URL to use with other OpenAI API compatible providers like VLLM, LMStudio etc.
      # - OPENAI_API_BASE=http://host.docker.internal:11434/v1/
      #
      # Uncomment appropriate lines below to use chat models by OpenAI, Anthropic, Google.
      # Ensure you set your provider specific API keys.
      # ---
      # - OPENAI_API_KEY=your_openai_api_key
      # - GEMINI_API_KEY=your_gemini_api_key
      # - ANTHROPIC_API_KEY=your_anthropic_api_key
      #
      # Uncomment appropriate lines below to enable web results with Khoj
      # Ensure you set your provider specific API keys.
      # ---
      # Free, Slower API. Does both web search and webpage read. Get API key from https://jina.ai/
      # - JINA_API_KEY=your_jina_api_key
      # Paid, Fast API. Only does web search. Get API key from https://serper.dev/
      # - SERPER_DEV_API_KEY=your_serper_dev_api_key
      # Paid, Fast, Open API. Only does webpage read. Get API key from https://firecrawl.dev/
      # - FIRECRAWL_API_KEY=your_firecrawl_api_key
      # Paid, Fast, Higher Read Success API. Only does webpage read. Get API key from https://olostep.com/
      # - OLOSTEP_API_KEY=your_olostep_api_key
      #
      # Uncomment the necessary lines below to make your instance publicly accessible.
      # Replace the KHOJ_DOMAIN with either your domain or IP address (no http/https prefix).
      # Proceed with caution, especially if you are using anonymous mode.
      # ---
      - KHOJ_NO_HTTPS=True
      # AFA TODO: I had to change this value to match the container ip
      # find a way to have the dns working (This is the address traefik uses to reach the container)
      - KHOJ_DOMAIN=172.20.0.5
      # - KHOJ_DOMAIN=khoj.statox.fr
      - KHOJ_TELEMETRY_DISABLE=True
    # Comment out this line when you're using the official ghcr.io/khoj-ai/khoj-cloud:latest prod image.
    command: --host="0.0.0.0" --port=42110 -vv --non-interactive
    networks:
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.khoj.rule=Host(`khoj.statox.fr`)"
      - "traefik.http.routers.khoj.entrypoints=websecure"
      - "traefik.http.routers.khoj.tls=true"
      - "traefik.http.services.khoj.loadbalancer.server.scheme=http"
