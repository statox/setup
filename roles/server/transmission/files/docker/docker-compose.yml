networks:
  reverse-proxy:
    external: true

services:
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PASSWORD}
    volumes:
      - ${TRANSMISSION_DATA_DIR}/data:/config
      - ${TRANSMISSION_DATA_DIR}/downloads:/downloads
      - ${TRANSMISSION_DATA_DIR}/watch/folder:/watch
    expose:
      - 9091
    ports:
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
    networks:
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.rule=Host(`${TRANSMISSION_UI_DOMAIN}`)"
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.tls=true"

  transmission-webserver:
    container_name: transmission-webserver
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ${TRANSMISSION_DATA_DIR}/downloads/complete:/www/data
    networks:
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission-webserver.rule=Host(`${TRANSMISSION_MEDIA_DOMAIN}`)"
      - "traefik.http.routers.transmission-webserver.entrypoints=websecure"
      - "traefik.http.routers.transmission-webserver.tls=true"

  # The container can't be accessed through a Cloudflare proxied DNS record because Cloudflare
  # SSH needs special config https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/use-cases/ssh/

  transmission-sftp:
    container_name: transmission-sftp
    image: atmoz/sftp
    volumes:
      - ${TRANSMISSION_DATA_DIR}/downloads/complete:/home/remote/downloads
      - ./sftp/users.conf:/etc/sftp/users.conf:ro
      - ./sftp/ssh_host_ed25519_key:/etc/ssh/ssh_host_ed25519_key:ro
      - ./sftp/ssh_host_rsa_key:/etc/ssh/ssh_host_rsa_key:ro
    networks:
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      # No Host() rule because the ssh router can't handle it
      # cf. https://community.traefik.io/t/routing-ssh-traffic-with-traefik-v2/717/6
      - "traefik.tcp.routers.transmission-sftp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.transmission-sftp.entrypoints=ssh"
      - "traefik.tcp.services.transmission-sftp.loadbalancer.server.port=22"

# DO NOT COMMIT /!\
# First remember to commit the jellyfin.statox.fr record in provisioning
# root - 7qf&$7jLoyd!jR
  transmission-jellyfin:
    image: jellyfin/jellyfin
    container_name: transmission-jellyfin
    networks:
      - reverse-proxy
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - type: bind
        source: ${TRANSMISSION_DATA_DIR}
        target: /media
        read_only: true
    restart: 'unless-stopped'
    # Optional - alternative address used for autodiscovery
    environment:
      - JELLYFIN_PublishedServerUrl=https://$JELLYFIN_DOMAIN
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission-jellyfin.rule=Host(`${JELLYFIN_DOMAIN}`)"
      - "traefik.http.routers.transmission-jellyfin.entrypoints=websecure"
      - "traefik.http.routers.transmission-jellyfin.tls=true"
