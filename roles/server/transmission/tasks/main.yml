# Clamav can be used to check the downloaded files
- name: Install clamav
  become: yes
  apt:
    state: latest
    name:
      - clamav

- name: Copy SSH configuration file to allow password connection for user "remote"
  become: yes
  copy:
    src: "{{ role_path }}/files/ssh/70-remote-user.conf"
    dest: /etc/ssh/sshd_config.d/70-remote-user.conf
    owner: root
    group: root
    mode: "644"
  notify: Restart sshd

- name: Create user "remote" to allow access from NAS
  become: yes
  user:
    name: remote
    # Use mkpasswd --method=sha-512 to generate the password hash
    password: "{{ remote_user_password_hash }}"
    comment: "Access transmission downloads from NAS"
    create_home: false

- name: Define variables
  set_fact:
    local_docker_path: "{{role_path}}/files/docker/"
    docker_app_home: "{{ ansible_env.HOME }}/.docker-apps/transmission"

- name: Ensure docker apps directory exists
  file:
    state: directory
    path: "{{ docker_app_home }}"

- name: Copy docker apps directory
  copy:
    src: "{{ local_docker_path }}"
    dest: "{{ docker_app_home }}"

- name: Copy templates to remote host
  template:
    src: "{{ item.src }}"
    dest: "{{ docker_app_home }}/{{ item.path | regex_replace('.j2','') }}"
  with_filetree: "{{ local_docker_path }}"
  when:
    - item.state == 'file'
    - item.path | regex_search('.j2$')

# ansible-galaxy collection install community.docker
- name: Tear down existing services
  become: yes
  community.docker.docker_compose_v2:
    project_src: "{{ docker_app_home }}"
    files:
      - docker-compose.yml
    state: absent

- name: Create and start services
  become: yes
  community.docker.docker_compose_v2:
    # build: always # Need to re-enable when editing Dockerfiles
    project_src: "{{ docker_app_home }}"
    files:
      - docker-compose.yml
  register: output

- name: Show results
  debug:
    var: output
